; Generated by holtek-gcc v3.19, Tue May 17 21:47:50 2022
; 
; Configuration:
;       with long instruction
;       Multi-ROM, Multi-RAM
;       bits_per_rom_unit:16
;       with mp1
;       with tbhp, address(0x9)
;          Use tabrd-const
;       
; SFR address of long-instruction arch:
;    mp0 = -1,1,0
;    mp1 = 4,3,2
;    mp2 = 14,13,12
;    tbp = 9,7,8
;    acc = 5
;    pcl = 6
;    status = 10
;    bp = 11
;    intc = 16
;       
;       
; use 'tabrdc' instead of 'tabrd'
;       

#pragma translator "holtek-gcc 4.6.4" "3.19" "build 20130711"
; Rebuild 718

ir equ [2]
mp equ [3]
sbp equ [4]
acc equ [5]
bp equ [11]
tblp equ [7]
tbhp equ [9]
status equ [10]
c equ [10].0
ac equ [10].1
z equ [10].2
ov equ [10].3
cz equ [10].6
sc equ [10].7
intc equ [16]
mduwr0 equ [59h]
mduwr1 equ [5ah]
mduwr2 equ [5bh]
mduwr3 equ [5ch]
mduwr4 equ [5dh]
mduwr5 equ [5eh]
mduwrctrl equ [5fh]

extern ra:byte
extern rb:byte
extern rc:byte
extern rd:byte
extern re:byte
extern rf:byte
extern rg:byte
extern rh:byte
extern _Crom2Prom:near
extern _Crom2PromNext:near

RAMBANK 0 @BITDATASEC, @BITDATASEC1
@HCCINIT	.section 'data'
@HCCINIT0	.section 'data'
@BITDATASEC	 .section 'data'
@BITDATASEC1	 .section 'data'

#pragma debug scope 1 1
	extern __DELAY3:near
	extern __DELAYX3:near
	extern __DELAYX6:near
	extern __DELAYY5:near
	extern __DELAYY3:near
	extern _builtin_holtek_delay_2:byte
___psc0r equ [99]
___tb0c equ [100]
___intc2 equ [18]
___intc0 equ [16]
public _DHT11_time_init
#pragma debug scope 2 1
#line 53 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
_DHT11_time_init .section 'code'
_DHT11_time_init proc
#line 54 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	mov a,2
	mov [99],a
#line 55 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	mov a,5
	mov [100],a
#line 56 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	set [100].7
#line 57 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	clr [18].5
#line 58 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	set [18].1
#line 59 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	set [16].0
	ret
_DHT11_time_init endp
#line 59 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
#pragma debug scope 1 1
___pac equ [21]
___pa equ [20]
public _DHT11_Rst
#pragma debug scope 3 1
#line 62 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
_DHT11_Rst .section 'code'
_DHT11_Rst proc
#line 63 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	clr [21].4
#line 64 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	set [20].4
#line 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF 4>263690
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	ERRMESSAGE 'the value 4of the argument exceeds the maxinum 263690'
	ENDIF
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF 4<0
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	ERRMESSAGE 'the value 4 of the argument exceeds the mininum 0'
	ENDIF
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF 4==0
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	JMP $
	ENDIF
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (4>=1) AND (4<( 4 + __PBP__ * 2))
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (4>=2) AND (4<( 4 + __PBP__ * 2))
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (4>=3) AND (4<( 4 + __PBP__ * 2))
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (4>=4) AND (4<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (4>=5) AND (4<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (4>=6) AND (4<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (4>=7) AND (4<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (4>=8) AND (4<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (4==9)  AND ( __PBP__ > 2 )
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (4< ( 8 + __PBP__ * 2)) AND (4>( 3 + __PBP__ * 2))
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -4
	ENDIF
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (4< ( 0404h + __PBP__ * 2)) AND (4>( 7 + __PBP__ * 2))
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV A,(4-( 4 + __PBP__ * 2))/4
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	fcall __DELAYX3 + 3 -((4-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (4< ( 040bh + __PBP__ * 2)) AND (4> ( 0403h + __PBP__ * 2))
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV A,0 
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -4
	ENDIF
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (4 >= ( 040bh + __PBP__ * 2)) AND ((((4-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV A,(4-( 9 + __PBP__ * 2))/0402h
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV _builtin_holtek_delay_2,A
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV A,0
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	fcall __DELAYY5 +5- (((4-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (4 >= ( 040bh + __PBP__ * 2)) AND ((((4-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV A,(4-( 9 + __PBP__ * 2))/0402h
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV _builtin_holtek_delay_2,A
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV A,((4-( 9 + __PBP__ * 2))%0402h)/4+1
;# 65 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	fcall __DELAYY3 +3-(((4-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 66 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	clr [20].4
#line 67 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	mov a,25
	mov _delay_ms_2[0],a
	clr _delay_ms_2[1]
	fcall _delay_ms
#line 68 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	set [20].4
#line 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF 60>263690
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	ERRMESSAGE 'the value 60of the argument exceeds the maxinum 263690'
	ENDIF
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF 60<0
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	ERRMESSAGE 'the value 60 of the argument exceeds the mininum 0'
	ENDIF
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF 60==0
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	JMP $
	ENDIF
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (60>=1) AND (60<( 4 + __PBP__ * 2))
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (60>=2) AND (60<( 4 + __PBP__ * 2))
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (60>=3) AND (60<( 4 + __PBP__ * 2))
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (60>=4) AND (60<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (60>=5) AND (60<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (60>=6) AND (60<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (60>=7) AND (60<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (60>=8) AND (60<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (60==9)  AND ( __PBP__ > 2 )
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (60< ( 8 + __PBP__ * 2)) AND (60>( 3 + __PBP__ * 2))
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -60
	ENDIF
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (60< ( 0404h + __PBP__ * 2)) AND (60>( 7 + __PBP__ * 2))
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV A,(60-( 4 + __PBP__ * 2))/4
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	fcall __DELAYX3 + 3 -((60-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (60< ( 040bh + __PBP__ * 2)) AND (60> ( 0403h + __PBP__ * 2))
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV A,0 
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -60
	ENDIF
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (60 >= ( 040bh + __PBP__ * 2)) AND ((((60-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV A,(60-( 9 + __PBP__ * 2))/0402h
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV _builtin_holtek_delay_2,A
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV A,0
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	fcall __DELAYY5 +5- (((60-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (60 >= ( 040bh + __PBP__ * 2)) AND ((((60-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV A,(60-( 9 + __PBP__ * 2))/0402h
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV _builtin_holtek_delay_2,A
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV A,((60-( 9 + __PBP__ * 2))%0402h)/4+1
;# 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	fcall __DELAYY3 +3-(((60-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
	ret
_DHT11_Rst endp
#line 69 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
#pragma debug scope 1 1
public _DHT11_rec_byte
#pragma debug scope 4 1
#line 72 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
_DHT11_rec_byte .section 'code'
_DHT11_rec_byte proc
	mov a,8
	mov rb,a
#line 73 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	clr ra
_L5:
#line 75 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	snz [20].4
	jmp _L5
#line 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF 70>263690
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	ERRMESSAGE 'the value 70of the argument exceeds the maxinum 263690'
	ENDIF
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF 70<0
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	ERRMESSAGE 'the value 70 of the argument exceeds the mininum 0'
	ENDIF
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF 70==0
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	JMP $
	ENDIF
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (70>=1) AND (70<( 4 + __PBP__ * 2))
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (70>=2) AND (70<( 4 + __PBP__ * 2))
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (70>=3) AND (70<( 4 + __PBP__ * 2))
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (70>=4) AND (70<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (70>=5) AND (70<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (70>=6) AND (70<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (70>=7) AND (70<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (70>=8) AND (70<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (70==9)  AND ( __PBP__ > 2 )
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (70< ( 8 + __PBP__ * 2)) AND (70>( 3 + __PBP__ * 2))
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -70
	ENDIF
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (70< ( 0404h + __PBP__ * 2)) AND (70>( 7 + __PBP__ * 2))
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV A,(70-( 4 + __PBP__ * 2))/4
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	fcall __DELAYX3 + 3 -((70-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (70< ( 040bh + __PBP__ * 2)) AND (70> ( 0403h + __PBP__ * 2))
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV A,0 
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -70
	ENDIF
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (70 >= ( 040bh + __PBP__ * 2)) AND ((((70-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV A,(70-( 9 + __PBP__ * 2))/0402h
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV _builtin_holtek_delay_2,A
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV A,0
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	fcall __DELAYY5 +5- (((70-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (70 >= ( 040bh + __PBP__ * 2)) AND ((((70-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV A,(70-( 9 + __PBP__ * 2))/0402h
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV _builtin_holtek_delay_2,A
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV A,((70-( 9 + __PBP__ * 2))%0402h)/4+1
;# 76 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	fcall __DELAYY3 +3-(((70-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 77 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	mov a,ra
	addm a,ra
#line 78 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	snz [20].4
	jmp _L8
#line 79 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	inc ra
_L8:
#line 80 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	sz [20].4
	jmp _L8
	sdz rb
	jmp _L5
#line 85 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	mov a,ra
	ret
_DHT11_rec_byte endp
#line 85 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
#pragma debug scope 1 1
public _DHT11_receive
#pragma debug scope 5 1
#line 88 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
_DHT11_receive .section 'code'
_DHT11_receive proc
#line 90 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	fcall _DHT11_Rst
#line 91 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	set [21].4
#line 92 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	sz [20].4
	jmp _L15
_L18:
#line 94 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	snz [20].4
	jmp _L18
#line 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF 160>263690
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	ERRMESSAGE 'the value 160of the argument exceeds the maxinum 263690'
	ENDIF
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF 160<0
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	ERRMESSAGE 'the value 160 of the argument exceeds the mininum 0'
	ENDIF
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF 160==0
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	JMP $
	ENDIF
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (160>=1) AND (160<( 4 + __PBP__ * 2))
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (160>=2) AND (160<( 4 + __PBP__ * 2))
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (160>=3) AND (160<( 4 + __PBP__ * 2))
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (160>=4) AND (160<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (160>=5) AND (160<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (160>=6) AND (160<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (160>=7) AND (160<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (160>=8) AND (160<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (160==9)  AND ( __PBP__ > 2 )
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (160< ( 8 + __PBP__ * 2)) AND (160>( 3 + __PBP__ * 2))
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -160
	ENDIF
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (160< ( 0404h + __PBP__ * 2)) AND (160>( 7 + __PBP__ * 2))
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV A,(160-( 4 + __PBP__ * 2))/4
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	fcall __DELAYX3 + 3 -((160-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (160< ( 040bh + __PBP__ * 2)) AND (160> ( 0403h + __PBP__ * 2))
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV A,0 
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -160
	ENDIF
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (160 >= ( 040bh + __PBP__ * 2)) AND ((((160-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV A,(160-( 9 + __PBP__ * 2))/0402h
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV _builtin_holtek_delay_2,A
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV A,0
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	fcall __DELAYY5 +5- (((160-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (160 >= ( 040bh + __PBP__ * 2)) AND ((((160-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV A,(160-( 9 + __PBP__ * 2))/0402h
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV _builtin_holtek_delay_2,A
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV A,((160-( 9 + __PBP__ * 2))%0402h)/4+1
;# 95 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	fcall __DELAYY3 +3-(((160-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 96 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	fcall _DHT11_rec_byte
	mov ra,a
	mov a,ra
	mov _R_H[0],a
#line 97 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	fcall _DHT11_rec_byte
	mov ra,a
	mov a,ra
	mov _R_L[0],a
#line 98 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	fcall _DHT11_rec_byte
	mov ra,a
	mov a,ra
	mov _T_H[0],a
#line 99 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	fcall _DHT11_rec_byte
	mov ra,a
	mov a,ra
	mov _T_L[0],a
#line 100 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	fcall _DHT11_rec_byte
	mov rb,a
	mov a,rb
	mov _revise[0],a
#line 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF 50>263690
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	ERRMESSAGE 'the value 50of the argument exceeds the maxinum 263690'
	ENDIF
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF 50<0
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	ERRMESSAGE 'the value 50 of the argument exceeds the mininum 0'
	ENDIF
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF 50==0
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	JMP $
	ENDIF
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (50>=1) AND (50<( 4 + __PBP__ * 2))
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (50>=2) AND (50<( 4 + __PBP__ * 2))
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (50>=3) AND (50<( 4 + __PBP__ * 2))
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (50>=4) AND (50<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (50>=5) AND (50<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (50>=6) AND (50<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (50>=7) AND (50<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (50>=8) AND (50<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (50==9)  AND ( __PBP__ > 2 )
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	NOP
	ENDIF
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (50< ( 8 + __PBP__ * 2)) AND (50>( 3 + __PBP__ * 2))
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -50
	ENDIF
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (50< ( 0404h + __PBP__ * 2)) AND (50>( 7 + __PBP__ * 2))
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV A,(50-( 4 + __PBP__ * 2))/4
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	fcall __DELAYX3 + 3 -((50-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (50< ( 040bh + __PBP__ * 2)) AND (50> ( 0403h + __PBP__ * 2))
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV A,0 
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -50
	ENDIF
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (50 >= ( 040bh + __PBP__ * 2)) AND ((((50-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV A,(50-( 9 + __PBP__ * 2))/0402h
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV _builtin_holtek_delay_2,A
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV A,0
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	fcall __DELAYY5 +5- (((50-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	IF (50 >= ( 040bh + __PBP__ * 2)) AND ((((50-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV A,(50-( 9 + __PBP__ * 2))/0402h
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV _builtin_holtek_delay_2,A
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	MOV A,((50-( 9 + __PBP__ * 2))%0402h)/4+1
;# 101 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c" 1
	fcall __DELAYY3 +3-(((50-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 102 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	mov a,_R_H[0]
	mov rg,a
	mov a,_R_L[0]
	mov rf,a
	mov a,_T_H[0]
	mov ra,a
	mov a,_T_L[0]
	mov rh,a
	mov a,rg
	mov rd,a
	clr re
	mov a,rf
	addm a,rd
	sz c
	inc re
	mov a,ra
	addm a,rd
	sz c
	inc re
	mov a,rh
	addm a,rd
	sz c
	inc re
	clr rc
	mov a,rd
	sub a,rb
	mov a,re
	sbc a,rc
	snz cz
	jmp _L19
#line 104 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	mov a,rg
	mov _RH[0],a
#line 105 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	mov a,rf
	mov _RL[0],a
#line 106 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	mov a,ra
	mov _TH[0],a
#line 107 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	mov a,rh
	mov _TL[0],a
_L19:
#line 109 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	mov a,_RH[0]
	mov ra,a
	clr _builtin_holtek_udivmodqi4_2[3]
	mov a,ra
	mov _builtin_holtek_udivmodqi4_2[0],a
	mov a,10
	mov _builtin_holtek_udivmodqi4_2[1],a
	fcall _builtin_holtek_udivmodqi4
	mov a,_builtin_holtek_udivmodqi4_2[0]
	mov rb,a
	mov a,rb
	add a,48
	mov _rec_dat[0],a
#line 110 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	clr _builtin_holtek_udivmodqi4_2[3]
	mov a,ra
	mov _builtin_holtek_udivmodqi4_2[0],a
	mov a,10
	mov _builtin_holtek_udivmodqi4_2[1],a
	fcall _builtin_holtek_udivmodqi4
	mov a,_builtin_holtek_udivmodqi4_2[2]
	mov ra,a
	mov a,ra
	add a,48
	mov _rec_dat[1],a
#line 111 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	mov a,32
	mov _rec_dat[2],a
#line 112 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	mov a,82
	mov _rec_dat[3],a
#line 113 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	mov a,72
	mov _rec_dat[4],a
#line 114 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	mov a,32
	mov _rec_dat[5],a
#line 115 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	mov a,32
	mov _rec_dat[6],a
#line 116 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	mov a,32
	mov _rec_dat[7],a
#line 117 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	mov a,32
	mov _rec_dat[8],a
#line 118 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	mov a,_TH[0]
	mov ra,a
	clr _builtin_holtek_udivmodqi4_2[3]
	mov a,ra
	mov _builtin_holtek_udivmodqi4_2[0],a
	mov a,10
	mov _builtin_holtek_udivmodqi4_2[1],a
	fcall _builtin_holtek_udivmodqi4
	mov a,_builtin_holtek_udivmodqi4_2[0]
	mov rb,a
	mov a,rb
	add a,48
	mov _rec_dat[9],a
#line 119 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	clr _builtin_holtek_udivmodqi4_2[3]
	mov a,ra
	mov _builtin_holtek_udivmodqi4_2[0],a
	mov a,10
	mov _builtin_holtek_udivmodqi4_2[1],a
	fcall _builtin_holtek_udivmodqi4
	mov a,_builtin_holtek_udivmodqi4_2[2]
	mov ra,a
	mov a,ra
	add a,48
	mov _rec_dat[10],a
#line 120 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	mov a,32
	mov _rec_dat[11],a
#line 121 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	mov a,67
	mov _rec_dat[12],a
#line 122 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	mov a,13
	mov _rec_dat[13],a
#line 123 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	mov a,10
	mov _rec_dat[14],a
#line 124 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	mov a,32
	mov _rec_dat[15],a
#line 125 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
	mov a,32
	mov _rec_dat[16],a
_L15:
	ret
_DHT11_receive endp
#line 125 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
#pragma debug scope 1 1
#line 12 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
public _a
@HCCINIT0_a .section 'data'
_a	db 2 dup(0)
#pragma debug variable 12 1 _a "a"

@HCCINIT .section 'data'
public _time2_count
@HCCINIT	.section 'data'
#line 12 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
@HCCINIT_time2_count .section 'data'
_time2_count label byte
#pragma debug variable 12 1 _time2_count "time2_count"
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_time2_count .section 'data'
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_time2_count .section 'data'
#line 11 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
public _i
@HCCINIT0_i .section 'data'
_i	db 0
#pragma debug variable 8 1 _i "i"

@HCCINIT .section 'data'
#line 11 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
public _rec_dat
@HCCINIT0_rec_dat .section 'data'
_rec_dat	db 17 dup(0)
#pragma debug array 42 8 17 1
#pragma debug variable 42 1 _rec_dat "rec_dat"

@HCCINIT .section 'data'
public _Humid
#line 11 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
@HCCINIT_Humid .section 'data'
_Humid label byte
#pragma debug variable 8 1 _Humid "Humid"
	db -18
@ROMDATA_BASE .section inpage 'code'
	db -18
@HCCINIT_Humid .section 'data'
public _Temp
#line 11 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
@HCCINIT_Temp .section 'data'
_Temp label byte
#pragma debug variable 8 1 _Temp "Temp"
	db -18
@ROMDATA_BASE .section inpage 'code'
	db -18
@HCCINIT_Temp .section 'data'
#line 11 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
public _revise
@HCCINIT0_revise .section 'data'
_revise	db 0
#pragma debug variable 8 1 _revise "revise"

@HCCINIT .section 'data'
#line 11 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
public _TL
@HCCINIT0_TL .section 'data'
_TL	db 0
#pragma debug variable 8 1 _TL "TL"

@HCCINIT .section 'data'
#line 11 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
public _TH
@HCCINIT0_TH .section 'data'
_TH	db 0
#pragma debug variable 8 1 _TH "TH"

@HCCINIT .section 'data'
#line 11 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
public _RL
@HCCINIT0_RL .section 'data'
_RL	db 0
#pragma debug variable 8 1 _RL "RL"

@HCCINIT .section 'data'
#line 11 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
public _RH
@HCCINIT0_RH .section 'data'
_RH	db 0
#pragma debug variable 8 1 _RH "RH"

@HCCINIT .section 'data'
#line 11 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
public _T_L
@HCCINIT0_T_L .section 'data'
_T_L	db 0
#pragma debug variable 8 1 _T_L "T_L"

@HCCINIT .section 'data'
#line 11 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
public _T_H
@HCCINIT0_T_H .section 'data'
_T_H	db 0
#pragma debug variable 8 1 _T_H "T_H"

@HCCINIT .section 'data'
#line 11 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
public _R_L
@HCCINIT0_R_L .section 'data'
_R_L	db 0
#pragma debug variable 8 1 _R_L "R_L"

@HCCINIT .section 'data'
#line 11 "E:\HT66\代码\HT66F2390_UART_1602\DHT11.c"
public _R_H
@HCCINIT0_R_H .section 'data'
_R_H	db 0
#pragma debug variable 8 1 _R_H "R_H"

@HCCINIT .section 'data'
#pragma debug struct_begin 43 "__intc0_bits"
#pragma debug field 21 8 0 1 "__emi" ;0,1
#pragma debug field 21 8 0 1 "__int0e" ;1,1
#pragma debug field 21 8 0 1 "__int1e" ;2,1
#pragma debug field 21 8 0 1 "__cp0e" ;3,1
#pragma debug field 21 8 0 1 "__int0f" ;4,1
#pragma debug field 21 8 0 1 "__int1f" ;5,1
#pragma debug field 21 8 0 1 "__cp0f" ;6,1
#pragma debug field 21 8 0 1 ;7,1
#pragma debug struct_end
#pragma debug union_begin 44 ""
#pragma debug field 2 43 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 44 1 ___intc0 "__intc0" 1
#pragma debug struct_begin 45 "__intc2_bits"
#pragma debug field 21 8 0 1 "__mf2e" ;0,1
#pragma debug field 21 8 0 1 "__tb0e" ;1,1
#pragma debug field 21 8 0 1 "__tb1e" ;2,1
#pragma debug field 21 8 0 1 "__mf3e" ;3,1
#pragma debug field 21 8 0 1 "__mf2f" ;4,1
#pragma debug field 21 8 0 1 "__tb0f" ;5,1
#pragma debug field 21 8 0 1 "__tb1f" ;6,1
#pragma debug field 21 8 0 1 "__mf3f" ;7,1
#pragma debug struct_end
#pragma debug union_begin 46 ""
#pragma debug field 2 45 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 46 1 ___intc2 "__intc2" 1
#pragma debug struct_begin 47 "__pa_bits"
#pragma debug field 21 8 0 1 "__pa0" ;0,1
#pragma debug field 21 8 0 1 "__pa1" ;1,1
#pragma debug field 21 8 0 1 "__pa2" ;2,1
#pragma debug field 21 8 0 1 "__pa3" ;3,1
#pragma debug field 21 8 0 1 "__pa4" ;4,1
#pragma debug field 21 8 0 1 "__pa5" ;5,1
#pragma debug field 21 8 0 1 "__pa6" ;6,1
#pragma debug field 21 8 0 1 "__pa7" ;7,1
#pragma debug struct_end
#pragma debug union_begin 48 ""
#pragma debug field 2 47 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 48 1 ___pa "__pa" 1
#pragma debug struct_begin 49 "__pac_bits"
#pragma debug field 21 8 0 1 "__pac0" ;0,1
#pragma debug field 21 8 0 1 "__pac1" ;1,1
#pragma debug field 21 8 0 1 "__pac2" ;2,1
#pragma debug field 21 8 0 1 "__pac3" ;3,1
#pragma debug field 21 8 0 1 "__pac4" ;4,1
#pragma debug field 21 8 0 1 "__pac5" ;5,1
#pragma debug field 21 8 0 1 "__pac6" ;6,1
#pragma debug field 21 8 0 1 "__pac7" ;7,1
#pragma debug struct_end
#pragma debug union_begin 50 ""
#pragma debug field 2 49 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 50 1 ___pac "__pac" 1
#pragma debug struct_begin 51 "__psc0r_bits"
#pragma debug field 21 8 0 1 "__clksel00" ;0,1
#pragma debug field 21 8 0 1 "__clksel01" ;1,1
#pragma debug field 21 8 0 6 ;2,6
#pragma debug struct_end
#pragma debug union_begin 52 ""
#pragma debug field 2 51 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 52 1 ___psc0r "__psc0r" 1
#pragma debug struct_begin 53 "__tb0c_bits"
#pragma debug field 21 8 0 1 "__tb00" ;0,1
#pragma debug field 21 8 0 1 "__tb01" ;1,1
#pragma debug field 21 8 0 1 "__tb02" ;2,1
#pragma debug field 21 8 0 4 ;3,4
#pragma debug field 21 8 0 1 "__tb0on" ;7,1
#pragma debug struct_end
#pragma debug union_begin 54 ""
#pragma debug field 2 53 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 54 1 ___tb0c "__tb0c" 1
extern _delay_ms_2:byte
extern _delay_ms:near
extern _builtin_holtek_udivmodqi4_2:byte
extern _builtin_holtek_udivmodqi4:near

; 
; Generated by holtek-gcc v3.19, Tue May 17 21:47:50 2022
; Rebuild 718
; end of file
