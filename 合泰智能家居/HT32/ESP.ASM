; Generated by holtek-gcc v3.19, Tue May 17 22:45:27 2022
; 
; Configuration:
;       with long instruction
;       Multi-ROM, Multi-RAM
;       bits_per_rom_unit:16
;       with mp1
;       with tbhp, address(0x9)
;          Use tabrd-const
;       
; SFR address of long-instruction arch:
;    mp0 = -1,1,0
;    mp1 = 4,3,2
;    mp2 = 14,13,12
;    tbp = 9,7,8
;    acc = 5
;    pcl = 6
;    status = 10
;    bp = 11
;    intc = 16
;       
;       
; use 'tabrdc' instead of 'tabrd'
;       

#pragma translator "holtek-gcc 4.6.4" "3.19" "build 20130711"
; Rebuild 718

ir equ [2]
mp equ [3]
sbp equ [4]
acc equ [5]
bp equ [11]
tblp equ [7]
tbhp equ [9]
status equ [10]
c equ [10].0
ac equ [10].1
z equ [10].2
ov equ [10].3
cz equ [10].6
sc equ [10].7
intc equ [16]
mduwr0 equ [59h]
mduwr1 equ [5ah]
mduwr2 equ [5bh]
mduwr3 equ [5ch]
mduwr4 equ [5dh]
mduwr5 equ [5eh]
mduwrctrl equ [5fh]

extern ra:byte
extern rb:byte
extern rc:byte
extern rd:byte
extern re:byte
extern rf:byte
extern rg:byte
extern rh:byte
extern _Crom2Prom:near
extern _Crom2PromNext:near

RAMBANK 0 @BITDATASEC, @BITDATASEC1
@HCCINIT	.section 'data'
@HCCINIT0	.section 'data'
@BITDATASEC	 .section 'data'
@BITDATASEC1	 .section 'data'

#pragma debug scope 1 1
	extern __DELAY3:near
	extern __DELAYX3:near
	extern __DELAYX6:near
	extern __DELAYY5:near
	extern __DELAYY3:near
	extern _builtin_holtek_delay_2:byte
___pbs0 equ [335]
___u2cr1 equ [268]
___u2cr2 equ [269]
___mfi5 equ [56]
___brg2 equ [271]
___intc3 equ [19]
___intc0 equ [16]
public _esp8266_init
#pragma debug scope 2 1
#line 16 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
_esp8266_init .section 'code'
_esp8266_init proc
#line 17 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,236
	lorm a,[335]
#line 18 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,128
	lmov [268],a
#line 19 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,236
	lmov [269],a
#line 20 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	set [56].2
#line 22 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,51
	lmov [271],a
#line 23 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	set [19].3
#line 24 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	set [16].0
	ret
_esp8266_init endp
#line 24 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
#pragma debug scope 1 1
___txr_rxr2 equ [270]
___u2sr equ [267]
public _send_char
#pragma debug scope 3 1
#line 27 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
_send_char .section 'code'
_send_char proc
    local _send_char_2 db 1 dup(?)	; 0,1
	mov ra,a
	mov _send_char_2[0],a
#pragma debug variable 7 3 _send_char_2+0 "s"
#line 29 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,ra
	lmov [270],a
_L4:
#line 30 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	lsnz [267].1
	jmp _L4
	ret
_send_char endp
#line 30 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
#pragma debug scope 1 1
public _re_buff
#pragma debug scope 4 1
#line 41 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
_re_buff .section 'code'
_re_buff proc
public _re_buff_2
    local _re_buff_2 db 3 dup(?)	; 3,0
#pragma debug pointer 42 7 4
#pragma debug variable 42 4 _re_buff_2+0 "rbuff"
#pragma debug variable 7 4 _re_buff_2+2 "c"
_L8:
#line 43 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	lsnz [267].3
	jmp _L8
#line 44 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	clr [16].0
#line 45 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	lmov a,[270]
	mov ra,a
#line 48 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,_data_count2[0]
	add a,_re_buff_2[0]
	mov mp,a
	mov a,_data_count2[1]
	adc a,_re_buff_2[1]
	mov sbp,a
#line 46 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,ra
	sub a,_re_buff_2[2]
	sz z
	jmp _L9
#line 48 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,ra
	mov ir,a
#line 49 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,1
	add a,_data_count2[0]
	mov rb,a
	mov a,0
	adc a,_data_count2[1]
	mov rc,a
	mov a,rb
	mov _data_count2[0],a
	mov a,rc
	mov _data_count2[1],a
#line 58 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	set [16].0
#line 59 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,rb
	mov ra,a
	mov a,rc
	mov rb,a
	jmp _L10
_L9:
#line 53 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,0
	mov ir,a
#line 54 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,_data_count2[0]
	mov ra,a
	mov a,_data_count2[1]
	mov rb,a
	mov a,ra
	mov _len2[0],a
	mov a,rb
	mov _len2[1],a
#line 55 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	clr _data_count2[0]
	clr _data_count2[1]
_L10:
	ret
_re_buff endp
#line 55 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
#pragma debug scope 1 1
___u0sr equ [272]
___txr_rxr0 equ [275]
public _re_buff0
#pragma debug scope 5 1
#line 62 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
_re_buff0 .section 'code'
_re_buff0 proc
public _re_buff0_2
    local _re_buff0_2 db 3 dup(?)	; 3,0
#pragma debug pointer 43 7 5
#pragma debug variable 43 5 _re_buff0_2+0 "rbuff"
#pragma debug variable 7 5 _re_buff0_2+2 "c"
_L13:
#line 65 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	lsnz [272].3
	jmp _L13
#line 66 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	clr [16].0
#line 67 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	lmov a,[275]
	mov ra,a
	mov a,_re_buff0_2[0]
	mov rb,a
	mov a,_re_buff0_2[1]
	mov rc,a
#line 70 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,rb
	mov mp,a
	mov a,rc
	mov sbp,a
#line 68 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,ra
	sub a,_re_buff0_2[2]
	sz z
	jmp _L14
#line 70 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,ra
	mov ir,a
#line 80 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	set [16].0
#line 81 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,1
	mov ra,a
	clr rb
	jmp _L15
_L14:
#line 75 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,0
	mov ir,a
#line 76 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	clr _len0[0]
	clr _len0[1]
#line 78 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	clr ra
	clr rb
_L15:
	ret
_re_buff0 endp
#line 78 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
#pragma debug scope 1 1
public _ESP8266_SendCmd
#pragma debug scope 6 1
#line 84 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
_ESP8266_SendCmd .section 'code'
_ESP8266_SendCmd proc
public _ESP8266_SendCmd_2
    local _ESP8266_SendCmd_2 db 2 dup(?)	; 2,0
#pragma debug pointer 44 7 6
#pragma debug variable 44 6 _ESP8266_SendCmd_2+0 "pbuf"
_L17:
#line 85 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,_ESP8266_SendCmd_2[0]
	mov mp,a
	mov a,_ESP8266_SendCmd_2[1]
	mov sbp,a
	fcall _Crom2Prom
	mov ra,a
	snz ra
	jmp _L19
#line 87 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,ra
	fcall _send_char
#line 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF 10>263690
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	ERRMESSAGE 'the value 10of the argument exceeds the maxinum 263690'
	ENDIF
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF 10<0
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	ERRMESSAGE 'the value 10 of the argument exceeds the mininum 0'
	ENDIF
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF 10==0
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	JMP $
	ENDIF
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (10>=1) AND (10<( 4 + __PBP__ * 2))
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	NOP
	ENDIF
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (10>=2) AND (10<( 4 + __PBP__ * 2))
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	NOP
	ENDIF
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (10>=3) AND (10<( 4 + __PBP__ * 2))
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	NOP
	ENDIF
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (10>=4) AND (10<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	NOP
	ENDIF
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (10>=5) AND (10<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	NOP
	ENDIF
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (10>=6) AND (10<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	NOP
	ENDIF
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (10>=7) AND (10<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	NOP
	ENDIF
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (10>=8) AND (10<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	NOP
	ENDIF
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (10==9)  AND ( __PBP__ > 2 )
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	NOP
	ENDIF
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (10< ( 8 + __PBP__ * 2)) AND (10>( 3 + __PBP__ * 2))
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -10
	ENDIF
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (10< ( 0404h + __PBP__ * 2)) AND (10>( 7 + __PBP__ * 2))
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	MOV A,(10-( 4 + __PBP__ * 2))/4
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	fcall __DELAYX3 + 3 -((10-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (10< ( 040bh + __PBP__ * 2)) AND (10> ( 0403h + __PBP__ * 2))
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	MOV A,0 
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -10
	ENDIF
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (10 >= ( 040bh + __PBP__ * 2)) AND ((((10-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	MOV A,(10-( 9 + __PBP__ * 2))/0402h
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	MOV _builtin_holtek_delay_2,A
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	MOV A,0
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	fcall __DELAYY5 +5- (((10-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (10 >= ( 040bh + __PBP__ * 2)) AND ((((10-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	MOV A,(10-( 9 + __PBP__ * 2))/0402h
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	MOV _builtin_holtek_delay_2,A
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	MOV A,((10-( 9 + __PBP__ * 2))%0402h)/4+1
;# 88 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	fcall __DELAYY3 +3-(((10-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 89 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	inc _ESP8266_SendCmd_2[0]
	sz z
	inc _ESP8266_SendCmd_2[1]
	jmp _L17
_L19:
#line 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF 100>263690
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	ERRMESSAGE 'the value 100of the argument exceeds the maxinum 263690'
	ENDIF
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF 100<0
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	ERRMESSAGE 'the value 100 of the argument exceeds the mininum 0'
	ENDIF
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF 100==0
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	JMP $
	ENDIF
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (100>=1) AND (100<( 4 + __PBP__ * 2))
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	NOP
	ENDIF
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (100>=2) AND (100<( 4 + __PBP__ * 2))
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	NOP
	ENDIF
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (100>=3) AND (100<( 4 + __PBP__ * 2))
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	NOP
	ENDIF
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (100>=4) AND (100<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	NOP
	ENDIF
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (100>=5) AND (100<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	NOP
	ENDIF
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (100>=6) AND (100<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	NOP
	ENDIF
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (100>=7) AND (100<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	NOP
	ENDIF
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (100>=8) AND (100<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	NOP
	ENDIF
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (100==9)  AND ( __PBP__ > 2 )
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	NOP
	ENDIF
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (100< ( 8 + __PBP__ * 2)) AND (100>( 3 + __PBP__ * 2))
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -100
	ENDIF
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (100< ( 0404h + __PBP__ * 2)) AND (100>( 7 + __PBP__ * 2))
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	MOV A,(100-( 4 + __PBP__ * 2))/4
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	fcall __DELAYX3 + 3 -((100-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (100< ( 040bh + __PBP__ * 2)) AND (100> ( 0403h + __PBP__ * 2))
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	MOV A,0 
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -100
	ENDIF
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (100 >= ( 040bh + __PBP__ * 2)) AND ((((100-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	MOV A,(100-( 9 + __PBP__ * 2))/0402h
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	MOV _builtin_holtek_delay_2,A
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	MOV A,0
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	fcall __DELAYY5 +5- (((100-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (100 >= ( 040bh + __PBP__ * 2)) AND ((((100-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	MOV A,(100-( 9 + __PBP__ * 2))/0402h
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	MOV _builtin_holtek_delay_2,A
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	MOV A,((100-( 9 + __PBP__ * 2))%0402h)/4+1
;# 91 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	fcall __DELAYY3 +3-(((100-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 92 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,13
	fcall _send_char
#line 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF 100>263690
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	ERRMESSAGE 'the value 100of the argument exceeds the maxinum 263690'
	ENDIF
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF 100<0
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	ERRMESSAGE 'the value 100 of the argument exceeds the mininum 0'
	ENDIF
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF 100==0
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	JMP $
	ENDIF
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (100>=1) AND (100<( 4 + __PBP__ * 2))
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	NOP
	ENDIF
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (100>=2) AND (100<( 4 + __PBP__ * 2))
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	NOP
	ENDIF
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (100>=3) AND (100<( 4 + __PBP__ * 2))
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	NOP
	ENDIF
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (100>=4) AND (100<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	NOP
	ENDIF
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (100>=5) AND (100<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	NOP
	ENDIF
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (100>=6) AND (100<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	NOP
	ENDIF
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (100>=7) AND (100<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	NOP
	ENDIF
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (100>=8) AND (100<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	NOP
	ENDIF
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (100==9)  AND ( __PBP__ > 2 )
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	NOP
	ENDIF
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (100< ( 8 + __PBP__ * 2)) AND (100>( 3 + __PBP__ * 2))
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -100
	ENDIF
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (100< ( 0404h + __PBP__ * 2)) AND (100>( 7 + __PBP__ * 2))
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	MOV A,(100-( 4 + __PBP__ * 2))/4
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	fcall __DELAYX3 + 3 -((100-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (100< ( 040bh + __PBP__ * 2)) AND (100> ( 0403h + __PBP__ * 2))
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	MOV A,0 
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -100
	ENDIF
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (100 >= ( 040bh + __PBP__ * 2)) AND ((((100-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	MOV A,(100-( 9 + __PBP__ * 2))/0402h
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	MOV _builtin_holtek_delay_2,A
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	MOV A,0
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	fcall __DELAYY5 +5- (((100-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	IF (100 >= ( 040bh + __PBP__ * 2)) AND ((((100-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	MOV A,(100-( 9 + __PBP__ * 2))/0402h
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	MOV _builtin_holtek_delay_2,A
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	MOV A,((100-( 9 + __PBP__ * 2))%0402h)/4+1
;# 93 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c" 1
	fcall __DELAYY3 +3-(((100-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 94 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,10
	fcall _send_char
#line 95 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,-24
	mov _delay_ms_2[0],a
	mov a,3
	mov _delay_ms_2[1],a
	fcall _delay_ms
	ret
_ESP8266_SendCmd endp
#line 95 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
#pragma debug scope 1 1
@crom	.section 'crom'
_LC0:
	db 041h,054h,02bh,052h,053h,054h,00h
@crom	.section 'crom'
_LC1:
	db 041h,054h,02bh,043h,057h,04dh,04fh,044h,045h,03dh
	db 031h,00h
@crom	.section 'crom'
_LC2:
	db 041h,054h,02bh,043h,057h,04ah,041h,050h,03dh,022h
	db 06ah,06ah,022h,02ch,022h,031h,032h,033h,034h,035h
	db 036h,037h,038h,022h,00h
@crom	.section 'crom'
_LC3:
	db 041h,054h,02bh,043h,049h,050h,04dh,055h,058h,03dh
	db 030h,00h
@crom	.section 'crom'
_LC4:
	db 041h,054h,02bh,043h,049h,050h,053h,054h,041h,052h
	db 054h,03dh,022h,054h,043h,050h,022h,02ch,022h,031h
	db 039h,032h,02eh,031h,036h,038h,02eh,036h,039h,02eh
	db 031h,032h,035h,022h,02ch,038h,038h,038h,038h,00h
@crom	.section 'crom'
_LC5:
	db 041h,054h,02bh,043h,049h,050h,04dh,04fh,044h,045h
	db 03dh,031h,00h
@crom	.section 'crom'
_LC6:
	db 041h,054h,02bh,043h,049h,050h,053h,045h,04eh,044h
	db 00h
public _ESP8266_ModeInit
#pragma debug scope 7 1
#line 100 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
_ESP8266_ModeInit .section 'code'
_ESP8266_ModeInit proc
#line 101 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,low offset _LC0
	mov _ESP8266_SendCmd_2[0],a
	mov a,high offset _LC0
	mov _ESP8266_SendCmd_2[1],a
	fcall _ESP8266_SendCmd
#line 102 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,-24
	mov _delay_ms_2[0],a
	mov a,3
	mov _delay_ms_2[1],a
	fcall _delay_ms
#line 103 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,low offset _LC1
	mov _ESP8266_SendCmd_2[0],a
	mov a,high offset _LC1
	mov _ESP8266_SendCmd_2[1],a
	fcall _ESP8266_SendCmd
#line 104 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,-24
	mov _delay_ms_2[0],a
	mov a,3
	mov _delay_ms_2[1],a
	fcall _delay_ms
#line 105 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,low offset _LC2
	mov _ESP8266_SendCmd_2[0],a
	mov a,high offset _LC2
	mov _ESP8266_SendCmd_2[1],a
	fcall _ESP8266_SendCmd
#line 106 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,16
	mov _delay_ms_2[0],a
	mov a,39
	mov _delay_ms_2[1],a
	fcall _delay_ms
#line 108 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,low offset _LC3
	mov _ESP8266_SendCmd_2[0],a
	mov a,high offset _LC3
	mov _ESP8266_SendCmd_2[1],a
	fcall _ESP8266_SendCmd
#line 109 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,-24
	mov _delay_ms_2[0],a
	mov a,3
	mov _delay_ms_2[1],a
	fcall _delay_ms
#line 110 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,low offset _LC4
	mov _ESP8266_SendCmd_2[0],a
	mov a,high offset _LC4
	mov _ESP8266_SendCmd_2[1],a
	fcall _ESP8266_SendCmd
#line 111 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,-24
	mov _delay_ms_2[0],a
	mov a,3
	mov _delay_ms_2[1],a
	fcall _delay_ms
#line 112 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,low offset _LC5
	mov _ESP8266_SendCmd_2[0],a
	mov a,high offset _LC5
	mov _ESP8266_SendCmd_2[1],a
	fcall _ESP8266_SendCmd
#line 113 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,-24
	mov _delay_ms_2[0],a
	mov a,3
	mov _delay_ms_2[1],a
	fcall _delay_ms
#line 114 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,low offset _LC6
	mov _ESP8266_SendCmd_2[0],a
	mov a,high offset _LC6
	mov _ESP8266_SendCmd_2[1],a
	fcall _ESP8266_SendCmd
#line 115 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,-24
	mov _delay_ms_2[0],a
	mov a,3
	mov _delay_ms_2[1],a
	fcall _delay_ms
	ret
_ESP8266_ModeInit endp
#line 115 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
#pragma debug scope 1 1
___phc equ [43]
___pgc equ [40]
@crom	.section 'crom'
_LC7:
	db 054h,068h,065h,020h,064h,06fh,06fh,072h,020h,077h
	db 061h,073h,020h,06fh,070h,065h,06eh,065h,064h,00h
___ph equ [42]
___pg equ [39]
public _UART0
#pragma debug scope 8 1
#line 119 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
rombank 0 @UART0_code
@UART0_code .section at 60 'code'
	mov r1,a
	mov a,bp
	clr bp
	jmp _UART0
ROMBANK 0 _UART0
#pragma debug scope 1 1
@dummy60 proc
	call _UART0
@dummy60 endp
#pragma debug scope 9 1
_UART0 .section 'code'
_UART0 proc
	mov r2,a
	mov a, status
	mov r3,a
	mov a,mp
	mov r4,a
	mov a,sbp
	mov r5,a
	mov a,tblp
	mov r6,a
	mov a,tbhp
	mov r7,a
#line 120 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	clr [43].0
#line 121 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	clr [43].1
#line 122 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	clr [40].2
#line 123 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	clr [40].4
#line 125 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,10
	mov _re_buff_2[2],a
	mov a,low offset _RecBuf2
	mov _re_buff_2[0],a
	mov a,high offset _RecBuf2
	mov _re_buff_2[1],a
	fcall _re_buff
#line 131 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	snz [56].4
	jmp _L22
#line 133 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,low offset _LC7
	mov _ESP8266_SendCmd_2[0],a
	mov a,high offset _LC7
	mov _ESP8266_SendCmd_2[1],a
	fcall _ESP8266_SendCmd
#line 134 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,0
	fcall _duoji1
_L22:
#line 136 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	snz [56].6
	jmp _L23
#line 138 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,low offset _RecBuf2
	add a,_u[0]
	mov mp,a
	mov a,high offset _RecBuf2
	adc a,_u[1]
	mov sbp,a
	fcall _Crom2Prom
	mov ra,a
	mov a,ra
	sub a,49
	snz z
	jmp _L24
#line 140 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	set [42].0
#line 141 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,49
	fcall _send_char
#line 142 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,45
	fcall _duoji0
#line 143 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,20
	fcall _duoji1
#line 144 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,20
	fcall _duoji2
#line 145 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	set [39].2
#line 146 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	set [39].4
_L24:
#line 148 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,low offset _RecBuf2
	add a,_u[0]
	mov mp,a
	mov a,high offset _RecBuf2
	adc a,_u[1]
	mov sbp,a
	fcall _Crom2Prom
	mov ra,a
	mov a,ra
	sub a,50
	snz z
	jmp _L25
#line 150 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	clr [42].0
#line 151 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,50
	fcall _send_char
#line 152 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,90
	fcall _duoji0
#line 153 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,90
	fcall _duoji1
#line 154 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,90
	fcall _duoji2
_L25:
#line 156 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,low offset _RecBuf2
	add a,_u[0]
	mov mp,a
	mov a,high offset _RecBuf2
	adc a,_u[1]
	mov sbp,a
	fcall _Crom2Prom
	mov ra,a
	mov a,ra
	sub a,51
	snz z
	jmp _L26
#line 158 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	clr [42].1
#line 159 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,51
	fcall _send_char
#line 160 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,120
	fcall _duoji0
#line 161 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,120
	fcall _duoji1
#line 162 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,120
	fcall _duoji2
_L26:
#line 164 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,low offset _RecBuf2
	add a,_u[0]
	mov mp,a
	mov a,high offset _RecBuf2
	adc a,_u[1]
	mov sbp,a
	fcall _Crom2Prom
	mov ra,a
	mov a,ra
	sub a,52
	snz z
	jmp _L27
#line 166 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	set [42].1
#line 167 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,52
	fcall _UART_Send_Byte
#line 168 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,180
	fcall _duoji0
#line 169 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,180
	fcall _duoji1
#line 170 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	mov a,180
	fcall _duoji2
#line 171 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	clr [39].2
#line 172 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	clr [39].4
_L27:
#line 174 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	inc _u[0]
	sz z
	inc _u[1]
_L23:
#line 176 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	clr [56].6
#line 177 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
	clr [56].4
	mov a,r2
	mov bp,a
	mov a,r3
	mov status,a
	mov a,r4
	mov mp,a
	mov a,r5
	mov sbp,a
	mov a,r6
	mov tblp,a
	mov a,r7
	mov tbhp,a
	tabrdc acc
	mov a,r1
	reti
_UART0 endp

#line 177 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
#pragma debug scope 1 1
#line 14 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
public _RecBuf0
@HCCINIT0_RecBuf0 .section 'data'
_RecBuf0	db 50 dup(0)
#pragma debug array 45 8 50 1
#pragma debug variable 45 1 _RecBuf0 "RecBuf0"

@HCCINIT .section 'data'
#line 13 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
public _door
@HCCINIT0_door .section 'data'
_door	db 0
#pragma debug variable 7 1 _door "door"

@HCCINIT .section 'data'
#line 13 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
public _RecBuf2
@HCCINIT0_RecBuf2 .section 'data'
_RecBuf2	db 50 dup(0)
#pragma debug array 46 7 50 1
#pragma debug variable 46 1 _RecBuf2 "RecBuf2"

@HCCINIT .section 'data'
public _u
@HCCINIT	.section 'data'
#line 12 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
@HCCINIT_u .section 'data'
_u label byte
#pragma debug variable 11 1 _u "u"
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_u .section 'data'
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_u .section 'data'
public _data_count2
#line 12 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
@HCCINIT_data_count2 .section 'data'
_data_count2 label byte
#pragma debug variable 11 1 _data_count2 "data_count2"
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_data_count2 .section 'data'
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT_data_count2 .section 'data'
#line 11 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
public _len0
@HCCINIT0_len0 .section 'data'
_len0	db 2 dup(0)
#pragma debug variable 11 1 _len0 "len0"

@HCCINIT .section 'data'
#line 10 "E:\HT66\代码\HT66F2390_UART_1602\ESP.c"
public _len2
@HCCINIT0_len2 .section 'data'
_len2	db 2 dup(0)
#pragma debug variable 11 1 _len2 "len2"

@HCCINIT .section 'data'
#pragma debug struct_begin 47 "__intc0_bits"
#pragma debug field 21 8 0 1 "__emi" ;0,1
#pragma debug field 21 8 0 1 "__int0e" ;1,1
#pragma debug field 21 8 0 1 "__int1e" ;2,1
#pragma debug field 21 8 0 1 "__cp0e" ;3,1
#pragma debug field 21 8 0 1 "__int0f" ;4,1
#pragma debug field 21 8 0 1 "__int1f" ;5,1
#pragma debug field 21 8 0 1 "__cp0f" ;6,1
#pragma debug field 21 8 0 1 ;7,1
#pragma debug struct_end
#pragma debug union_begin 48 ""
#pragma debug field 2 47 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 48 1 ___intc0 "__intc0" 1
#pragma debug struct_begin 49 "__intc3_bits"
#pragma debug field 21 8 0 1 "__int2e" ;0,1
#pragma debug field 21 8 0 1 "__int3e" ;1,1
#pragma debug field 21 8 0 1 "__mf4e" ;2,1
#pragma debug field 21 8 0 1 "__mf5e" ;3,1
#pragma debug field 21 8 0 1 "__int2f" ;4,1
#pragma debug field 21 8 0 1 "__int3f" ;5,1
#pragma debug field 21 8 0 1 "__mf4f" ;6,1
#pragma debug field 21 8 0 1 "__mf5f" ;7,1
#pragma debug struct_end
#pragma debug union_begin 50 ""
#pragma debug field 2 49 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 50 1 ___intc3 "__intc3" 1
#pragma debug struct_begin 51 "__pg_bits"
#pragma debug field 21 8 0 1 "__pg0" ;0,1
#pragma debug field 21 8 0 1 "__pg1" ;1,1
#pragma debug field 21 8 0 1 "__pg2" ;2,1
#pragma debug field 21 8 0 1 "__pg3" ;3,1
#pragma debug field 21 8 0 1 "__pg4" ;4,1
#pragma debug field 21 8 0 1 "__pg5" ;5,1
#pragma debug field 21 8 0 1 "__pg6" ;6,1
#pragma debug field 21 8 0 1 "__pg7" ;7,1
#pragma debug struct_end
#pragma debug union_begin 52 ""
#pragma debug field 2 51 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 52 1 ___pg "__pg" 1
#pragma debug struct_begin 53 "__pgc_bits"
#pragma debug field 21 8 0 1 "__pgc0" ;0,1
#pragma debug field 21 8 0 1 "__pgc1" ;1,1
#pragma debug field 21 8 0 1 "__pgc2" ;2,1
#pragma debug field 21 8 0 1 "__pgc3" ;3,1
#pragma debug field 21 8 0 1 "__pgc4" ;4,1
#pragma debug field 21 8 0 1 "__pgc5" ;5,1
#pragma debug field 21 8 0 1 "__pgc6" ;6,1
#pragma debug field 21 8 0 1 "__pgc7" ;7,1
#pragma debug struct_end
#pragma debug union_begin 54 ""
#pragma debug field 2 53 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 54 1 ___pgc "__pgc" 1
#pragma debug struct_begin 55 "__ph_bits"
#pragma debug field 21 8 0 1 "__ph0" ;0,1
#pragma debug field 21 8 0 1 "__ph1" ;1,1
#pragma debug field 21 8 0 1 "__ph2" ;2,1
#pragma debug field 21 8 0 1 "__ph3" ;3,1
#pragma debug field 21 8 0 1 "__ph4" ;4,1
#pragma debug field 21 8 0 1 "__ph5" ;5,1
#pragma debug field 21 8 0 2 ;6,2
#pragma debug struct_end
#pragma debug union_begin 56 ""
#pragma debug field 2 55 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 56 1 ___ph "__ph" 1
#pragma debug struct_begin 57 "__phc_bits"
#pragma debug field 21 8 0 1 "__phc0" ;0,1
#pragma debug field 21 8 0 1 "__phc1" ;1,1
#pragma debug field 21 8 0 1 "__phc2" ;2,1
#pragma debug field 21 8 0 1 "__phc3" ;3,1
#pragma debug field 21 8 0 1 "__phc4" ;4,1
#pragma debug field 21 8 0 1 "__phc5" ;5,1
#pragma debug field 21 8 0 2 ;6,2
#pragma debug struct_end
#pragma debug union_begin 58 ""
#pragma debug field 2 57 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 58 1 ___phc "__phc" 1
#pragma debug struct_begin 59 "__mfi5_bits"
#pragma debug field 21 8 0 1 "__ur0e" ;0,1
#pragma debug field 21 8 0 1 "__ur1e" ;1,1
#pragma debug field 21 8 0 1 "__ur2e" ;2,1
#pragma debug field 21 8 0 1 ;3,1
#pragma debug field 21 8 0 1 "__ur0f" ;4,1
#pragma debug field 21 8 0 1 "__ur1f" ;5,1
#pragma debug field 21 8 0 1 "__ur2f" ;6,1
#pragma debug field 21 8 0 1 ;7,1
#pragma debug struct_end
#pragma debug union_begin 60 ""
#pragma debug field 2 59 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 60 1 ___mfi5 "__mfi5" 1
#pragma debug struct_begin 61 "__u2sr_bits"
#pragma debug field 21 8 0 1 "__txif2" ;0,1
#pragma debug field 21 8 0 1 "__tidle2" ;1,1
#pragma debug field 21 8 0 1 "__rxif2" ;2,1
#pragma debug field 21 8 0 1 "__ridle2" ;3,1
#pragma debug field 21 8 0 1 "__oerr2" ;4,1
#pragma debug field 21 8 0 1 "__ferr2" ;5,1
#pragma debug field 21 8 0 1 "__nf2" ;6,1
#pragma debug field 21 8 0 1 "__perr2" ;7,1
#pragma debug struct_end
#pragma debug union_begin 62 ""
#pragma debug field 2 61 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 62 1 ___u2sr "__u2sr" 1
#pragma debug struct_begin 63 "__u2cr1_bits"
#pragma debug field 21 8 0 1 "__tx82" ;0,1
#pragma debug field 21 8 0 1 "__rx82" ;1,1
#pragma debug field 21 8 0 1 "__txbrk2" ;2,1
#pragma debug field 21 8 0 1 "__stops2" ;3,1
#pragma debug field 21 8 0 1 "__prt2" ;4,1
#pragma debug field 21 8 0 1 "__pren2" ;5,1
#pragma debug field 21 8 0 1 "__bno2" ;6,1
#pragma debug field 21 8 0 1 "__uarten2" ;7,1
#pragma debug struct_end
#pragma debug union_begin 64 ""
#pragma debug field 2 63 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 64 1 ___u2cr1 "__u2cr1" 1
#pragma debug struct_begin 65 "__u2cr2_bits"
#pragma debug field 21 8 0 1 "__teie2" ;0,1
#pragma debug field 21 8 0 1 "__tiie2" ;1,1
#pragma debug field 21 8 0 1 "__rie2" ;2,1
#pragma debug field 21 8 0 1 "__wake2" ;3,1
#pragma debug field 21 8 0 1 "__adden2" ;4,1
#pragma debug field 21 8 0 1 "__brgh2" ;5,1
#pragma debug field 21 8 0 1 "__rxen2" ;6,1
#pragma debug field 21 8 0 1 "__txen2" ;7,1
#pragma debug struct_end
#pragma debug union_begin 66 ""
#pragma debug field 2 65 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 66 1 ___u2cr2 "__u2cr2" 1
#pragma debug variable 8 1 ___txr_rxr2 "__txr_rxr2" 1
#pragma debug variable 8 1 ___brg2 "__brg2" 1
#pragma debug struct_begin 67 "__u0sr_bits"
#pragma debug field 21 8 0 1 "__txif0" ;0,1
#pragma debug field 21 8 0 1 "__tidle0" ;1,1
#pragma debug field 21 8 0 1 "__rxif0" ;2,1
#pragma debug field 21 8 0 1 "__ridle0" ;3,1
#pragma debug field 21 8 0 1 "__oerr0" ;4,1
#pragma debug field 21 8 0 1 "__ferr0" ;5,1
#pragma debug field 21 8 0 1 "__nf0" ;6,1
#pragma debug field 21 8 0 1 "__perr0" ;7,1
#pragma debug struct_end
#pragma debug union_begin 68 ""
#pragma debug field 2 67 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 68 1 ___u0sr "__u0sr" 1
#pragma debug variable 8 1 ___txr_rxr0 "__txr_rxr0" 1
#pragma debug struct_begin 69 "__pbs0_bits"
#pragma debug field 21 8 0 1 "__pbs00" ;0,1
#pragma debug field 21 8 0 1 "__pbs01" ;1,1
#pragma debug field 21 8 0 1 "__pbs02" ;2,1
#pragma debug field 21 8 0 1 "__pbs03" ;3,1
#pragma debug field 21 8 0 1 "__pbs04" ;4,1
#pragma debug field 21 8 0 1 "__pbs05" ;5,1
#pragma debug field 21 8 0 1 "__pbs06" ;6,1
#pragma debug field 21 8 0 1 "__pbs07" ;7,1
#pragma debug struct_end
#pragma debug union_begin 70 ""
#pragma debug field 2 69 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 70 1 ___pbs0 "__pbs0" 1
extern r1:byte
extern r2:byte
extern r3:byte
extern r4:byte
extern r5:byte
extern r6:byte
extern r7:byte
extern _delay_ms_2:byte
extern _delay_ms:near
extern _duoji1:near
extern _duoji0:near
extern _duoji2:near
extern _UART_Send_Byte:near

; 
; Generated by holtek-gcc v3.19, Tue May 17 22:45:27 2022
; Rebuild 718
; end of file
