; Generated by holtek-gcc v3.19, Tue May 17 21:47:50 2022
; 
; Configuration:
;       with long instruction
;       Multi-ROM, Multi-RAM
;       bits_per_rom_unit:16
;       with mp1
;       with tbhp, address(0x9)
;          Use tabrd-const
;       
; SFR address of long-instruction arch:
;    mp0 = -1,1,0
;    mp1 = 4,3,2
;    mp2 = 14,13,12
;    tbp = 9,7,8
;    acc = 5
;    pcl = 6
;    status = 10
;    bp = 11
;    intc = 16
;       
;       
; use 'tabrdc' instead of 'tabrd'
;       

#pragma translator "holtek-gcc 4.6.4" "3.19" "build 20130711"
; Rebuild 718

ir equ [2]
mp equ [3]
sbp equ [4]
acc equ [5]
bp equ [11]
tblp equ [7]
tbhp equ [9]
status equ [10]
c equ [10].0
ac equ [10].1
z equ [10].2
ov equ [10].3
cz equ [10].6
sc equ [10].7
intc equ [16]
mduwr0 equ [59h]
mduwr1 equ [5ah]
mduwr2 equ [5bh]
mduwr3 equ [5ch]
mduwr4 equ [5dh]
mduwr5 equ [5eh]
mduwrctrl equ [5fh]

extern ra:byte
extern rb:byte
extern rc:byte
extern rd:byte
extern re:byte
extern rf:byte
extern rg:byte
extern rh:byte
extern _Crom2Prom:near
extern _Crom2PromNext:near

RAMBANK 0 @BITDATASEC, @BITDATASEC1
@HCCINIT	.section 'data'
@HCCINIT0	.section 'data'
@BITDATASEC	 .section 'data'
@BITDATASEC1	 .section 'data'

#pragma debug scope 1 1
	extern __DELAY3:near
	extern __DELAYX3:near
	extern __DELAYX6:near
	extern __DELAYY5:near
	extern __DELAYY3:near
	extern _builtin_holtek_delay_2:byte
___pac equ [21]
___pa equ [20]
@crom	.section 'crom'
_LC0:
	db 06eh,06fh,020h,070h,06fh,06ch,06ch,075h,074h,065h
	db 064h,00h
@crom	.section 'crom'
_LC1:
	db 070h,06fh,06ch,06ch,075h,074h,065h,064h,00h
public _MQ_2
#pragma debug scope 2 1
#line 12 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c"
_MQ_2 .section 'code'
_MQ_2 proc
#line 13 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c"
	set [21].3
#line 14 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c"
	mov a,50
	mov _delay_ms_2[0],a
	clr _delay_ms_2[1]
	fcall _delay_ms
#line 15 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c"
	snz [20].3
	jmp _L2
#line 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c"
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	IF 10>263690
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	ERRMESSAGE 'the value 10of the argument exceeds the maxinum 263690'
	ENDIF
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	IF 10<0
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	ERRMESSAGE 'the value 10 of the argument exceeds the mininum 0'
	ENDIF
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	IF 10==0
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	JMP $
	ENDIF
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	IF (10>=1) AND (10<( 4 + __PBP__ * 2))
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	NOP
	ENDIF
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	IF (10>=2) AND (10<( 4 + __PBP__ * 2))
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	NOP
	ENDIF
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	IF (10>=3) AND (10<( 4 + __PBP__ * 2))
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	NOP
	ENDIF
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	IF (10>=4) AND (10<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	NOP
	ENDIF
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	IF (10>=5) AND (10<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	NOP
	ENDIF
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	IF (10>=6) AND (10<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	NOP
	ENDIF
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	IF (10>=7) AND (10<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	NOP
	ENDIF
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	IF (10>=8) AND (10<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	NOP
	ENDIF
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	IF (10==9)  AND ( __PBP__ > 2 )
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	NOP
	ENDIF
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	IF (10< ( 8 + __PBP__ * 2)) AND (10>( 3 + __PBP__ * 2))
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -10
	ENDIF
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	IF (10< ( 0404h + __PBP__ * 2)) AND (10>( 7 + __PBP__ * 2))
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	MOV A,(10-( 4 + __PBP__ * 2))/4
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	fcall __DELAYX3 + 3 -((10-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	IF (10< ( 040bh + __PBP__ * 2)) AND (10> ( 0403h + __PBP__ * 2))
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	MOV A,0 
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -10
	ENDIF
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	IF (10 >= ( 040bh + __PBP__ * 2)) AND ((((10-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	MOV A,(10-( 9 + __PBP__ * 2))/0402h
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	MOV _builtin_holtek_delay_2,A
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	MOV A,0
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	fcall __DELAYY5 +5- (((10-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	IF (10 >= ( 040bh + __PBP__ * 2)) AND ((((10-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	MOV A,(10-( 9 + __PBP__ * 2))/0402h
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	MOV _builtin_holtek_delay_2,A
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	MOV A,((10-( 9 + __PBP__ * 2))%0402h)/4+1
;# 17 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	fcall __DELAYY3 +3-(((10-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 18 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c"
	snz [20].3
	jmp _L2
#line 20 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c"
	mov a,low offset _LC0
	mov _ESP8266_SendCmd_2[0],a
	mov a,high offset _LC0
	mov _ESP8266_SendCmd_2[1],a
	fcall _ESP8266_SendCmd
#line 21 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c"
	mov a,13
	fcall _send_char
#line 22 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c"
	mov a,10
	fcall _send_char
_L2:
#line 26 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c"
	sz [20].3
	jmp _L1
#line 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c"
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	IF 10>263690
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	ERRMESSAGE 'the value 10of the argument exceeds the maxinum 263690'
	ENDIF
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	IF 10<0
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	ERRMESSAGE 'the value 10 of the argument exceeds the mininum 0'
	ENDIF
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	IF 10==0
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	JMP $
	ENDIF
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	IF (10>=1) AND (10<( 4 + __PBP__ * 2))
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	NOP
	ENDIF
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	IF (10>=2) AND (10<( 4 + __PBP__ * 2))
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	NOP
	ENDIF
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	IF (10>=3) AND (10<( 4 + __PBP__ * 2))
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	NOP
	ENDIF
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	IF (10>=4) AND (10<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	NOP
	ENDIF
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	IF (10>=5) AND (10<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	NOP
	ENDIF
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	IF (10>=6) AND (10<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	NOP
	ENDIF
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	IF (10>=7) AND (10<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	NOP
	ENDIF
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	IF (10>=8) AND (10<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	NOP
	ENDIF
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	IF (10==9)  AND ( __PBP__ > 2 )
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	NOP
	ENDIF
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	IF (10< ( 8 + __PBP__ * 2)) AND (10>( 3 + __PBP__ * 2))
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -10
	ENDIF
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	IF (10< ( 0404h + __PBP__ * 2)) AND (10>( 7 + __PBP__ * 2))
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	MOV A,(10-( 4 + __PBP__ * 2))/4
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	fcall __DELAYX3 + 3 -((10-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	IF (10< ( 040bh + __PBP__ * 2)) AND (10> ( 0403h + __PBP__ * 2))
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	MOV A,0 
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -10
	ENDIF
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	IF (10 >= ( 040bh + __PBP__ * 2)) AND ((((10-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	MOV A,(10-( 9 + __PBP__ * 2))/0402h
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	MOV _builtin_holtek_delay_2,A
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	MOV A,0
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	fcall __DELAYY5 +5- (((10-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	IF (10 >= ( 040bh + __PBP__ * 2)) AND ((((10-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	MOV A,(10-( 9 + __PBP__ * 2))/0402h
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	MOV _builtin_holtek_delay_2,A
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	MOV A,((10-( 9 + __PBP__ * 2))%0402h)/4+1
;# 28 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c" 1
	fcall __DELAYY3 +3-(((10-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 29 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c"
	sz [20].3
	jmp _L1
#line 31 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c"
	mov a,low offset _LC1
	mov _ESP8266_SendCmd_2[0],a
	mov a,high offset _LC1
	mov _ESP8266_SendCmd_2[1],a
	fcall _ESP8266_SendCmd
#line 32 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c"
	mov a,13
	fcall _send_char
#line 33 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c"
	mov a,10
	fcall _send_char
#line 34 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c"
	mov a,180
	fcall _duoji1
_L1:
	ret
_MQ_2 endp
#line 34 "E:\HT66\代码\HT66F2390_UART_1602\MQ.c"
#pragma debug scope 1 1
#pragma debug struct_begin 42 "__pa_bits"
#pragma debug field 21 8 0 1 "__pa0" ;0,1
#pragma debug field 21 8 0 1 "__pa1" ;1,1
#pragma debug field 21 8 0 1 "__pa2" ;2,1
#pragma debug field 21 8 0 1 "__pa3" ;3,1
#pragma debug field 21 8 0 1 "__pa4" ;4,1
#pragma debug field 21 8 0 1 "__pa5" ;5,1
#pragma debug field 21 8 0 1 "__pa6" ;6,1
#pragma debug field 21 8 0 1 "__pa7" ;7,1
#pragma debug struct_end
#pragma debug union_begin 43 ""
#pragma debug field 2 42 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 43 1 ___pa "__pa" 1
#pragma debug struct_begin 44 "__pac_bits"
#pragma debug field 21 8 0 1 "__pac0" ;0,1
#pragma debug field 21 8 0 1 "__pac1" ;1,1
#pragma debug field 21 8 0 1 "__pac2" ;2,1
#pragma debug field 21 8 0 1 "__pac3" ;3,1
#pragma debug field 21 8 0 1 "__pac4" ;4,1
#pragma debug field 21 8 0 1 "__pac5" ;5,1
#pragma debug field 21 8 0 1 "__pac6" ;6,1
#pragma debug field 21 8 0 1 "__pac7" ;7,1
#pragma debug struct_end
#pragma debug union_begin 45 ""
#pragma debug field 2 44 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 45 1 ___pac "__pac" 1
extern _delay_ms_2:byte
extern _delay_ms:near
extern _ESP8266_SendCmd_2:byte
extern _ESP8266_SendCmd:near
extern _send_char:near
extern _duoji1:near

; 
; Generated by holtek-gcc v3.19, Tue May 17 21:47:50 2022
; Rebuild 718
; end of file
